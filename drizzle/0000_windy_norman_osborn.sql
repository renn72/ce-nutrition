CREATE TABLE `ce-nu_grocery_store` (
	`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`name` text,
	`locations` text
);
--> statement-breakpoint
CREATE TABLE `ce-nu_ingredient` (
	`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer,
	`user_id` text,
	`serve_size` text,
	`serve_unit` text,
	`public_food_key` text,
	`classification` text,
	`food_name` text,
	`energy_with_fibre` text,
	`energy_without_fibre` text,
	`moisture` text,
	`protein` text,
	`nitrogen` text,
	`fat_total` text,
	`ash` text,
	`total_dietary_fibre` text,
	`alcohol` text,
	`fructose` text,
	`glucose` text,
	`sucrose` text,
	`maltose` text,
	`lactose` text,
	`galactose` text,
	`maltotrios` text,
	`total_sugars` text,
	`added_sugars` text,
	`free_sugars` text,
	`starch` text,
	`dextrin` text,
	`glycerol` text,
	`glycogen` text,
	`inulin` text,
	`erythritol` text,
	`maltitol` text,
	`mannitol` text,
	`xylitol` text,
	`maltodextrin` text,
	`oligosaccharides` text,
	`polydextrose` text,
	`raffinose` text,
	`stachyose` text,
	`sorbitol` text,
	`resistant_starch` text,
	`available_carbohydrate_without_sugar_alcohols` text,
	`available_carbohydrate_with_sugar_alcohols` text,
	`acetic_acid` text,
	`citric_acid` text,
	`fumaric_acid` text,
	`lactic_acid` text,
	`malic_acid` text,
	`oxalic_acid` text,
	`propionic_acid` text,
	`quinic_acid` text,
	`shikimic_acid` text,
	`succinic_acid` text,
	`tartaric_acid` text,
	`aluminium` text,
	`antimony` text,
	`arsenic` text,
	`cadmium` text,
	`calcium` text,
	`chromium` text,
	`chloride` text,
	`cobalt` text,
	`copper` text,
	`fluoride` text,
	`iodine` text,
	`iron` text,
	`lead` text,
	`magnesium` text,
	`manganese` text,
	`mercury` text,
	`molybdenum` text,
	`nickel` text,
	`phosphorus` text,
	`potassium` text,
	`selenium` text,
	`sodium` text,
	`sulphur` text,
	`tin` text,
	`zinc` text,
	`retinol` text,
	`alpha_carotene` text,
	`beta_carotene` text,
	`cryptoxanthin` text,
	`beta_carotene_equivalents` text,
	`vitamin_a_retinol_equivalents` text,
	`lutein` text,
	`lycopene` text,
	`xanthophyl` text,
	`thiamin` text,
	`riboflavin` text,
	`niacin` text,
	`niacin_derived_from_tryptophan` text,
	`niacin_derived_equivalents` text,
	`pantothenic_acid` text,
	`pyridoxine` text,
	`biotin` text,
	`cobalamin` text,
	`folate_natural` text,
	`folic_acid` text,
	`total_folates` text,
	`dietary_folate_equivalents` text,
	`vitamin_c` text,
	`cholecalciferol` text,
	`ergocalciferol` text,
	`vitamin_d3_equivalents` text,
	`alpha_tocopherol` text,
	`alpha_tocotrienol` text,
	`beta_tocopherol` text,
	`delta_tocopherol` text,
	`gamma_tocopherol` text,
	`vitamin_e` text,
	`caffeine` text,
	`cholesterol` text,
	`alanine` text,
	`arginine` text,
	`aspartic_acid` text,
	`cystine_plus_cysteine` text,
	`glutamic_acid` text,
	`glycine` text,
	`histidine` text,
	`isoleucine` text,
	`leucine` text,
	`lysine` text,
	`methionine` text,
	`phenylalanine` text,
	`proline` text,
	`serine` text,
	`threonine` text,
	`tyrosine` text,
	`tryptophan` text,
	`valine` text,
	FOREIGN KEY (`user_id`) REFERENCES `ce-nu_user`(`id`) ON UPDATE no action ON DELETE no action
);
--> statement-breakpoint
CREATE TABLE `ce-nu_notification` (
	`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`user_id` text,
	`title` text,
	`description` text,
	`is_read` integer,
	`is_viewed` integer,
	`is_deleted` integer,
	`notes` text,
	FOREIGN KEY (`user_id`) REFERENCES `ce-nu_user`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `ce-nu_account` (
	`user_id` text(255) NOT NULL,
	`type` text(255) NOT NULL,
	`provider` text(255) NOT NULL,
	`provider_account_id` text(255) NOT NULL,
	`refresh_token` text,
	`access_token` text,
	`expires_at` integer,
	`token_type` text(255),
	`scope` text(255),
	`id_token` text,
	`session_state` text(255),
	PRIMARY KEY(`provider`, `provider_account_id`),
	FOREIGN KEY (`user_id`) REFERENCES `ce-nu_user`(`id`) ON UPDATE no action ON DELETE no action
);
--> statement-breakpoint
CREATE TABLE `ce-nu_role` (
	`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer,
	`user_id` text,
	`name` text,
	FOREIGN KEY (`user_id`) REFERENCES `ce-nu_user`(`id`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE TABLE `ce-nu_session` (
	`session_token` text(255) PRIMARY KEY NOT NULL,
	`userId` text(255) NOT NULL,
	`expires` integer NOT NULL,
	FOREIGN KEY (`userId`) REFERENCES `ce-nu_user`(`id`) ON UPDATE no action ON DELETE no action
);
--> statement-breakpoint
CREATE TABLE `ce-nu_user` (
	`id` text(255) PRIMARY KEY NOT NULL,
	`name` text,
	`first_name` text,
	`last_name` text,
	`clerk_id` text,
	`birth_date` integer,
	`gender` text,
	`address` text,
	`notes` text,
	`instagram` text,
	`open_lifter` text,
	`phone` text,
	`email` text,
	`email_verified` integer,
	`password` text,
	`image` text,
	`is_fake` integer DEFAULT false,
	`is_root` integer DEFAULT false,
	`is_creator` integer DEFAULT false,
	`created_at` integer DEFAULT (unixepoch()) NOT NULL,
	`updated_at` integer
);
--> statement-breakpoint
CREATE TABLE `ce-nu_verification_token` (
	`identifier` text(255) NOT NULL,
	`token` text(255) NOT NULL,
	`expires` integer NOT NULL,
	PRIMARY KEY(`identifier`, `token`)
);
--> statement-breakpoint
CREATE INDEX `notification_user_id_idx` ON `ce-nu_notification` (`user_id`);--> statement-breakpoint
CREATE INDEX `account_user_id_idx` ON `ce-nu_account` (`user_id`);--> statement-breakpoint
CREATE INDEX `session_userId_idx` ON `ce-nu_session` (`userId`);--> statement-breakpoint
CREATE UNIQUE INDEX `ce-nu_user_email_unique` ON `ce-nu_user` (`email`);--> statement-breakpoint
CREATE INDEX `name_idx` ON `ce-nu_user` (`name`);--> statement-breakpoint
CREATE INDEX `clerk_id_idx` ON `ce-nu_user` (`clerk_id`);--> statement-breakpoint
CREATE INDEX `email_idx` ON `ce-nu_user` (`email`);